// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contracts {
  id       String  @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  address  String  @unique @db.VarChar(42)
  isERC20  Boolean @default(false)
  isERC721 Boolean @default(false)

  @@index([address])
}

model Tokens {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  address   String   @db.VarChar(42)
  symbol    String?  @db.VarChar(10)
  name      String?  @db.VarChar(100)
  decimals  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([address])
  @@index([address])
}

enum TransferType {
  ETH_TRANSFER
  ERC20_TRANSFER
  ERC20_APPROVAL
  ERC721_TRANSFER
  ERC1155_TRANSFER_SINGLE
  ERC1155_TRANSFER_BATCH
}

model Transfers {
  id              String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  type            TransferType? @default(ETH_TRANSFER)
  tokenAddress    String?       @db.VarChar(42)
  from            String        @db.VarChar(42)
  to              String        @db.VarChar(42)
  value           String        @db.VarChar(78)
  blockNumber     Int
  transactionHash String        @db.VarChar(66)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@unique([transactionHash, type, tokenAddress])
  @@index([transactionHash, type, tokenAddress])
  @@index([to, from])
  @@index([tokenAddress, from])
  @@index([tokenAddress, to])
}

enum BlockStatus {
  PENDING
  SCANNING
  PROCESSED
  FAILED
}

model Blocks {
  id          String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  blockNumber Int
  status      BlockStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@unique([blockNumber])
  @@index([blockNumber])
}
